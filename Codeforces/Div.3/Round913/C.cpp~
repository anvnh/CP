#pragma GCC optimize("O3,unroll-loops")
#include <bits/stdc++.h>
using namespace std;
#define fastio                        \
	ios_base::sync_with_stdio(false); \
	cin.tie(nullptr);                 \
	cout.tie(nullptr);
#define forn(i, n) for (int i = 0; i < (n); ++i)
#define for1(i, n) for (int i = 1; i <= (n); ++i)
#define ford(i, n) for (int i = (n)-1; i >= 0; --i)
#define fore(i, a, b) for (int i = (a); i <= (b); ++i)
#define ll long long
#define pb push_back
#define fi first
#define se second
#define endl "\n"
#define sz(x) (int)(x).size()
#define all(x) begin(x), end(x)
#define rall(x) rbegin(x), rend(x)
#define maxn 100005
#define debug(x) cerr << #x << " = " << x << endl;
template <typename T>
void print(const T &v) {
    for (const auto &x : v) {
        cout << x << " ";
    }
    cout << "\n";
}
const ll MOD = (1e9) + 7;
signed main()
{
	fastio;
	int ntest; cin >> ntest;
	while(ntest--)
	{
		int n; cin >> n; 
		string s; cin >> s;
		vector<char> ans;
		vector<char> res;
		for(int i = 0; i < n/2; i++)
			ans.pb(s[i]);
		int i;
		for((n&1)? i = (n - n/2 - 1) : i = n - n/2; i < n; ++i)
		{
			if(s[i] == ans.back() || sz(ans) == 0)
				ans.pb(s[i]);
			else
				ans.pop_back();
		}
		res.pb(s[0]);
		for(int i = 1; i < n; i++) 
		{
			if(s[i] == res.back() || sz(res) == 0) res.pb(s[i]);
			else if(s[i] != res.back()) res.pop_back();
		}
		cout << min(sz(res), sz(ans)) << endl;
	}
	return 0;
}
